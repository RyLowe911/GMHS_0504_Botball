#include <kipr/botball.h>

void drive_forward(int distance);
void drive_backward (int distance);
void rightturn(int degrees);
void leftturn(int degrees);

int main()
{
    wait_for_light(0);
	msleep(500);
    shut_down_in(118);
    enable_servos();
    set_servo_position(3,600);
    drive_forward(27);
    rightturn(90);
    drive_forward(46);
    leftturn(90);
    drive_forward(34);
    msleep(500);
    set_servo_position(3,1615);
    msleep(500);
    leftturn(62);
    msleep(500);
    drive_forward(45);
    leftturn(10);
    drive_forward(98);
    drive_backward(2);
    set_servo_position(3,600);
    msleep(100);
    disable_servos();
    ao();
    return 0;
}

//int seconds or unit forward? using encoders? so void function (number of units forward or degrees)
void drive_forward (int distance)
       {
	cmpc(0);
    while(abs(gmpc(0))<distance)
    {
        mav(0,670);
        mav(3,700);
        msleep(distance*152);
    }
       }

void drive_backward (int distance)
{
    cmpc(0);
    while(abs(gmpc(0))<distance)
    {
        mav(0,-670);
        mav(3,-700);
        msleep(distance*152);

    }
}
void rightturn (int degrees)
      {
    cmpc(0);
    while(abs(gmpc(0))<degrees)
    {
	mav(0,500);
	mav(3,-500);
    msleep(degrees*20);
    }
      }
	
void leftturn (int degrees)	
      {
    cmpc(0);
    while(abs(gmpc(0))<degrees)
    {
	mav(0,-500);
	mav(3,500);
    msleep(degrees*21);
    }
      }
