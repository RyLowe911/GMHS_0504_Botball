void drive_forward(int distance);
void drive_backward (int distance);
void rightturn(int degrees);
void leftturn(int degrees);
void turboblast(int distance);

int main()
{
    wait_for_light(0);
	  msleep(500);
    shut_down_in(118);
    enable_servos();
    set_servo_position(1,1613);
    set_servo_position(3,600);
    drive_forward(27);
    rightturn(90);
    drive_forward(46);
    leftturn(90);
    drive_forward(30.5);
    msleep(500);
    set_servo_position(3,1615);
    msleep(500);
    leftturn(62);
    msleep(500);
    drive_forward(42);
    drive_forward(42);
    leftturn(10);
    drive_forward(50);
    drive_backward(1);
    set_servo_position(3,650);
    leftturn(90); 
    drive_forward(10);
    //enable_servos
    set_servo_position(1,95);
    drive_backward(20);
    set_servo_position(1,900);
    drive_forward(30);
    leftturn(90);
    turboblast(60);
    turboblast(60);
    rightturn(90);
    drive_forward(45);
    drive_backward(12);
    rightturn(180);
    set_servo_position(1,200);
    set_servo_position(1,40);
    set_servo_position(1,200);
    set_servo_position(1,40);
    disable_servos();
    ao();
    return 0;
    
}

//int seconds or unit forward? using encoders? so void function (number of units forward or degrees)
void drive_forward (int distance)
{
	cmpc(0);
    while(abs(gmpc(0))<distance)
    {
        mav(0,690);
        mav(3,730);
        msleep(distance*152);
    }
}

void drive_backward (int distance)
{
    cmpc(0);
    while(abs(gmpc(0))<distance)
    {
        mav(0,-690);
        mav(3,-730);
        msleep(distance*152);
    }
}

void rightturn (int degrees)
{
    cmpc(0);
    while(abs(gmpc(0))<degrees)
    {
	mav(0,500);
	mav(3,-500);
    msleep(degrees*20);
    }
}
	
void leftturn (int degrees)	
{
    cmpc(0);
    while(abs(gmpc(0))<degrees)
    {
	mav(0,-500);
	mav(3,500);
    msleep(degrees*21);
	}
}

void turboblast (int distance)
{
	cmpc(0);
    while(abs(gmpc(0))<distance)
    {
        mav(0,900);
        mav(3,1000);
        msleep(distance*152);
    }
}
