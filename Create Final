#include <kipr/botball.h>
void drive_forward(int distance);
void drive_backward(int distance);
void turn_left(int degrees);
void turn_right(int degrees);
void wide_turn(int distance);
int main()
{
    create_connect();
    wait_for_light(0);
    shut_down_in(118);
    turn_left(46);
    drive_forward(6.5);
    turn_left(51);
    drive_forward(22);
    while(get_create_lfcliff_amt()>2000)
    {
        create_drive_direct(150,160);
        mav(3,750);
        msleep(10);
    }
    turn_right(6);
    drive_forward(5);
    mav(3,750);
    msleep(10000);
    ao();
    drive_backward(12);
    turn_left(17);
    drive_backward(10);
    turn_right(12);
    drive_forward(10);
    turn_left(20);
    drive_backward(7);
    turn_left(29);
    while(get_create_rcliff_amt()>1500)
    {
        create_drive_direct(-150,-160);
        msleep(10);
    }
    drive_forward(3);
    create_stop();
    turn_right(38);
    msleep(1000);  
    drive_backward(76);
    wide_turn(68);
    drive_backward(30);
    msleep(2000);
    turn_left(10);
    
    create_disconnect();
    return 0;   
}
void drive_forward(int distance)
{
    set_create_distance(0);
    while(abs(get_create_distance())<distance)
    {
        create_drive_direct(130,176);
        msleep(10);
    }
    create_stop();
}
void drive_backward(int distance)
{
    set_create_distance(0);
    while(abs(get_create_distance())<distance)
    {
        create_drive_direct(-130,-180);
        msleep(10);
    }
    create_stop();
}
void turn_left(int degrees)
{
    set_create_total_angle(0);
    while(abs(get_create_total_angle())<degrees)
    {
        create_drive_direct(-100,100);
        msleep(10);
    }
    create_stop();
}
void turn_right(int degrees)
{
    set_create_total_angle(0);
    while(abs(get_create_total_angle())<degrees)
    {
        create_drive_direct(100,-100);
        msleep(10);
    }
    create_stop();
}
void wide_turn(int distance)
{
    set_create_distance(0);
    while(abs(get_create_distance())<distance)
    {
        create_drive_direct(-66,-320);
        msleep(10);
    }
    create_stop();
}
